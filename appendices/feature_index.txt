// Copyright (c) 2021 Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

// The asciidoc [glossary] template cannot contain subsections.
// The abbreviations and prefixes probably belong in the upcoming
// API/extension-writing-guidelines appendix, anyway.

[appendix]
[[feature_index]]
== Feature Index

* <<api_types_lights, `KHR_AREA_LIGHTS`>>: Additional parameters are supported to spatially extend lights and thus potentially enable soft shadows
* <<api_concepts_memory, `KHR_ARRAY1D_REGION`>>: Permit runtime changable valid array region
* <<object_types_camera_omnidirectional, `KHR_CAMERA_OMNIDIRECTIONAL`>>: `omnidirectional` camera subtype is supported
* <<object_types_camera_orthographic, `KHR_CAMERA_ORTHOGRAPHIC`>>: `orthographic` camera subtype is supported
* <<object_types_camera_perspective, `KHR_CAMERA_PERSPECTIVE`>>: `perspective` camera subtype is supported
* <<api_concepts_thread_safety, `KHR_DEVICE_SYNCHRONIZATION`>>: Relax API function synchronization requirement
* <<object_types_frame, `KHR_FRAME_AUXILIARY_BUFFERS`>>: Additional ANARIFrame channels are supported
* <<object_types_frame, `KHR_FRAME_ID_BUFFERS`>>: Additional ANARIFrame channels are supported
* <<object_types_frame, `KHR_FRAME_COMPLETION_CALLBACK`>>: Frame completion callback function parameters on ANARIFrame are supported
* <<object_types_geometry_cone, `KHR_GEOMETRY_CONE`>>: `cone` geometry subtype is supported
* <<object_types_geometry_curve, `KHR_GEOMETRY_CURVE`>>: `curve` geometry subtype is supported
* <<object_types_geometry_cylinder, `KHR_GEOMETRY_CYLINDER`>>: `cylinder` geometry subtype is supported
* <<object_types_geometry_quad, `KHR_GEOMETRY_QUAD`>>: `quad` geometry subtype is supported
* <<object_types_geometry_sphere, `KHR_GEOMETRY_SPHERE`>>: `sphere` geometry subtype is supported
* <<object_types_geometry_triangle, `KHR_GEOMETRY_TRIANGLE`>>: `triangle` geometry subtype is supported
* <<object_types_light_directional, `KHR_LIGHT_DIRECTIONAL`>>: `directional` light subtype is supported
* <<object_types_light_hdri, `KHR_LIGHT_HDRI`>>: `hdri` light subtype is supported
* <<object_types_light_point, `KHR_LIGHT_POINT`>>: `point` light subtype is supported
* <<object_types_light_quad, `KHR_LIGHT_QUAD`>>: `quad` light subtype is supported
* <<object_types_light_ring, `KHR_LIGHT_RING`>>: `ring` light subtype is supported
* <<object_types_light_spot, `KHR_LIGHT_SPOT`>>: `spot` light subtype is supported
* <<object_types_material_matte, `KHR_MATERIAL_MATTE`>>: `matte` material subtype is supported
* <<object_types_material_physically_based, `KHR_MATERIAL_PHYSICALLY_BASED`>>: `physicallyBased` material subtype is supported
* <<object_types_sampler_image1D, `KHR_SAMPLER_IMAGE1D`>>: `image1D` sampler subtype is supported
* <<object_types_sampler_image2D, `KHR_SAMPLER_IMAGE2D`>>: `image2D` sampler subtype is supported
* <<object_types_sampler_image3D, `KHR_SAMPLER_IMAGE3D`>>: `image3D` sampler subtype is supported
* <<object_types_sampler_primitive, `KHR_SAMPLER_PRIMITIVE`>>: `primitive` sampler subtype is supported
* <<object_types_sampler_transform, `KHR_SAMPLER_TRANSFORM`>>: `transform` sampler subtype is supported
* <<object_types_spatial_field_structured_regular, `KHR_SPATIAL_FIELD_STRUCTURED_REGULAR`>>: `structuredRegular` spatial field subtype is supported
* <<object_types_frame, `KHR_PROGRESSIVE_RENDERING`>>: Frames are progressively rendered
* <<object_types_instance, `KHR_TRANSFORMATION_MOTION_BLUR`>>: Motion blur is supported through extra object parameters
* <<object_types_volume_transfer_function1d, `KHR_VOLUME_TRANSFER_FUNCTION1D`>>: `transferFunction1D` volume subtype is supported
