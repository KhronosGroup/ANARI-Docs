// Copyright 2023 The Khronos Group Inc.
// SPDX-License-Identifier: CC-BY-4.0  

// The asciidoc [glossary] template cannot contain subsections.
// The abbreviations and prefixes probably belong in the upcoming
// API/extension-writing-guidelines appendix, anyway.

[appendix]
[[extension_index]]
== Extension Index

* <<api_types_lights, `KHR_AREA_LIGHTS`>>: Additional parameters are supported to spatially extend lights and thus potentially enable soft shadows
* <<extension_array1d_region, `KHR_ARRAY1D_REGION`>>: Permit runtime changeable valid array region
* <<extension_camera_depth_of_field, `KHR_CAMERA_DEPTH_OF_FIELD`>>: depth of field is supported
* <<extension_camera_motion_transformation, `KHR_CAMERA_MOTION_TRANSFORMATION`>>: camera transformation motion blur is supported
* <<object_types_camera_omnidirectional, `KHR_CAMERA_OMNIDIRECTIONAL`>>: `omnidirectional` camera subtype is supported
* <<object_types_camera_orthographic, `KHR_CAMERA_ORTHOGRAPHIC`>>: `orthographic` camera subtype is supported
* <<object_types_camera_perspective, `KHR_CAMERA_PERSPECTIVE`>>: `perspective` camera subtype is supported
* <<extension_camera_rolling_shutter, `KHR_CAMERA_ROLLING_SHUTTER`>>: camera rolling shutter is supported
* <<extension_camera_shutter, `KHR_CAMERA_SHUTTER`>>: camera global shutter and motion blur in combination with other extensions is supported
* <<extension_camera_stereo, `KHR_CAMERA_STEREO`>>: 3D stereo rendering is supported
* <<api_concepts_thread_safety, `KHR_DEVICE_SYNCHRONIZATION`>>: Relax API function synchronization requirement
* <<extension_frame_accumulation, `KHR_FRAME_ACCUMULATION`>>: Frames are progressively rendered
* <<frame_channels, `KHR_FRAME_CHANNEL_NORMAL`>>: `channel.normal` is supported on ANARIFrame
* <<frame_channels, `KHR_FRAME_CHANNEL_ALBEDO`>>: `channel.albedo` is supported on ANARIFrame
* <<frame_channels, `KHR_FRAME_CHANNEL_PRIMITIVE_ID`>>: `channel.primitiveId` is supported on ANARIFrame
* <<frame_channels, `KHR_FRAME_CHANNEL_OBJECT_ID`>>: `channel.objectId` is supported on ANARIFrame
* <<frame_channels, `KHR_FRAME_CHANNEL_INSTANCE_ID`>>: `channel.instanceId` is supported on ANARIFrame
* <<extension_frame_completion_callback, `KHR_FRAME_COMPLETION_CALLBACK`>>: Frame completion callback function parameters on ANARIFrame are supported
* <<object_types_geometry_cone, `KHR_GEOMETRY_CONE`>>: `cone` geometry subtype is supported
* <<object_types_geometry_curve, `KHR_GEOMETRY_CURVE`>>: `curve` geometry subtype is supported
* <<object_types_geometry_cylinder, `KHR_GEOMETRY_CYLINDER`>>: `cylinder` geometry subtype is supported
* <<object_types_geometry_quad, `KHR_GEOMETRY_QUAD`>>: `quad` geometry subtype is supported
* <<extension_geometry_quad_motion_deformation, `KHR_GEOMETRY_QUAD_MOTION_DEFORMATION`>>: `quad` geometry subtype supports deformation mortion blur
* <<object_types_geometry_sphere, `KHR_GEOMETRY_SPHERE`>>: `sphere` geometry subtype is supported
* <<object_types_geometry_triangle, `KHR_GEOMETRY_TRIANGLE`>>: `triangle` geometry subtype is supported
* <<extension_geometry_triangle_motion_deformation, `KHR_GEOMETRY_TRIANGLE_MOTION_DEFORMATION`>>: `triangle` geometry subtype supports deformation mortion blur
* <<object_types_instance_transform, `KHR_INSTANCE_TRANSFORM`>>: instances and basic `transform` instance subtype is supported
* <<object_types_instance_motion_transform, `KHR_INSTANCE_MOTION_TRANSFORM`>>: `motionTransform` instance subtype and instance transformation motion blur is supported
* <<object_types_instance_motion_scale_rotation_translation, `KHR_INSTANCE_MOTION_SCALE_ROTATION_TRANSLATION`>>: `motionScaleRotationTranslation` instance subtype and instance transformation motion blur is supported
* <<object_types_light_directional, `KHR_LIGHT_DIRECTIONAL`>>: `directional` light subtype is supported
* <<object_types_light_hdri, `KHR_LIGHT_HDRI`>>: `hdri` light subtype is supported
* <<object_types_light_point, `KHR_LIGHT_POINT`>>: `point` light subtype is supported
* <<object_types_light_quad, `KHR_LIGHT_QUAD`>>: `quad` light subtype is supported
* <<object_types_light_ring, `KHR_LIGHT_RING`>>: `ring` light subtype is supported
* <<object_types_light_spot, `KHR_LIGHT_SPOT`>>: `spot` light subtype is supported
* <<object_types_material_matte, `KHR_MATERIAL_MATTE`>>: `matte` material subtype is supported
* <<object_types_material_physically_based, `KHR_MATERIAL_PHYSICALLY_BASED`>>: `physicallyBased` material subtype is supported
* <<object_types_sampler_image1D, `KHR_SAMPLER_IMAGE1D`>>: `image1D` sampler subtype is supported
* <<object_types_sampler_image2D, `KHR_SAMPLER_IMAGE2D`>>: `image2D` sampler subtype is supported
* <<object_types_sampler_image3D, `KHR_SAMPLER_IMAGE3D`>>: `image3D` sampler subtype is supported
* <<object_types_sampler_primitive, `KHR_SAMPLER_PRIMITIVE`>>: `primitive` sampler subtype is supported
* <<object_types_sampler_transform, `KHR_SAMPLER_TRANSFORM`>>: `transform` sampler subtype is supported
* <<object_types_spatial_field_structured_regular, `KHR_SPATIAL_FIELD_STRUCTURED_REGULAR`>>: `structuredRegular` spatial field subtype is supported
* <<object_types_volume_transfer_function1d, `KHR_VOLUME_TRANSFER_FUNCTION1D`>>: `transferFunction1D` volume subtype is supported
