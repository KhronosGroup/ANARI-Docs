// Copyright (c) 2021 Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

[appendix]
[[transferFunction1D_algorithm]]
== TransferFunction1D Reference Algorithm

The following is a possible raymarching implementation of the `transferFunction1D` volume.
Implementations are not required to implement this but are encouraged to use it as a reference
when adapting other algorithms to produce visually similar results.

[source]
....
ColorAccumulator = 0
Transmittance = 1

while x in volume
   StepOpacity = opacity(field(x))*color(field(x)).alpha
   StepColor = color(field(x)).rgb

   if StepOpacity<1.0
      Sigma = log(1-StepOpacity)/attenuationDistance
      StepTransmittance = exp(step*Sigma)
   else
      StepTransmittance = 0.0

   ColorAccumulator = ColorAccumulator + Transmittance*(1.0-StepTransmittance)*StepColor

   Transmittance = Transmittance * StepTransmittance

   x = x + direction*step
....

Any transformations the volume is subject to are assumed to be
taken into account during sampling of `field(x)`.

The current sample location `x` is in world space. The `direction` vector is the view/ray direction and is assumed to be normalized.
The variables `field`, `opacity`, `color` and `attenuationDistance` are parameters of the `transferFunction1D` volume object.