// Copyright (c) 2023 Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/


[[object_types_instance]]
=== Instance

Instances apply transforms to groups for placement in the World.
Instances are created with

[source,cpp]
....
ANARIInstance anariNewInstance(ANARIDevice, const char *subtype);
....

All instances take an array of <<group>> representing all the objects which
share the instances world-space transform. They also always take a generic
`FLOAT32_MAT4` transform which serves as a fall back but may be overriden by
subtype specific transform definitions.

.Parameters understood by all instances.
[cols="<,<,>,<3",options="header,unbreakable"]
|===================================================================================================
| Name      | Type         |                                       Default | Description
| group     |`GROUP`       |                                               | Group to be instanced, required
| transform |`FLOAT32_MAT4`| \((1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1)) | world-space transformation matrix for all attached objects
                                                                             (overridden by  `motion.transform`, extension `KHR_TRANSFORMATION_MOTION_BLUR`)
| id        |`UINT32`     |                                            -1u | optional user Id, for <<object_types_frame>> channel `instanceId`
|===================================================================================================

The matrix `transform` represents an affine transformation which is
applied to homogeneous coordinates.

[NOTE]
.Note
====
Since the `FLOAT32_MAT4` matrix `transform` is in column-major layout
the translational part of the affine transformation is the 13th to 15th
float in memory. Implementations are free to always treat the last row
(4th, 8th, 12th and 16th float) as being (0, 0, 0, 1).
====

.Properties supported by instances.
[cols="<,<,<2",options="header,unbreakable"]
|===================================================================================================
| Name     | Type         | Description
| bounds   |`FLOAT32_BOX3`| axis-aligned bounding box in world-space (excluding the lights)
|===================================================================================================

Extension: `KHR_INSTANCE_MATRIX`

The `matrix` instance subtype is a basic instance that implements the mandatory
parameters and properties listed above. When this extension is supported creating
an instance of unknown subtype will create an instance of subtype `matrix`
instead.

[NOTE]
.Note
====
Since the parameters of all other instance subtypes are supersets of the
`matrix` subtype they can be safely substituted in case an implementation does
not support that subtype. To maximize compatibility the transform parameter
should always be set in addition to any subtype specific transform parameters.
====


Extension `KHR_INSTANCE_MOTION_MATRIX`:

The `motionMatrix` instance subtype represents uniformly (in `time`) distributed
transformation keys as defined by `motion.transform` to achieve
transformation motion blur in combination with `time` and `shutter`.
<<cameras, Camera>> `shutter` needs to be set appropiately.

.Additional parameters understood by instances with extension `KHR_TRANSFORMATION_MOTION_BLUR`.
[cols="<2,<2,>,<5",options="header,unbreakable"]
|===================================================================================================
| Name               | Type                           | Default | Description
| motion.transform   |`ARRAY1D` of `FLOAT32_MAT4`     |         | additional uniformly distributed world-space transformations
| time               |`FLOAT32_BOX1`                  |  [0, 1] | time associated with first and last key in `motion.pass:[*]` arrays
|===================================================================================================

The `motion.transform` parameter takes precedent over the generic `transform`
parameter when motion blur is supported. Renderers that don't support motion
blur may fall back to using the generic `transform` parameter.

Extension `KHR_INSTANCE_MOTION_SRT`:

The `motionSRT` instance subtype represents uniformly (in `time`) distributed
transformation keys as defined by decomposed `motion.scale`, `motion.rotation`
and `motion.translation` transform compoments. <<cameras, Camera>> `shutter`
also needs to be set appropiately.

.Additional parameters understood by instances with extension `KHR_TRANSFORMATION_MOTION_BLUR`.
[cols="<2,<2,>,<5",options="header,unbreakable"]
|===================================================================================================
| Name               | Type                           | Default | Description
| motion.scale       |`ARRAY1D` of `FLOAT32_VEC3`     |         | additional uniformly distributed scale, overridden by `motion.transform`
| motion.rotation    |`ARRAY1D` of `FLOAT32_QUAT_IJKW`|         | additional uniformly distributed quaternion rotation, overridden by `motion.transform`
| motion.translation |`ARRAY1D` of `FLOAT32_VEC3`     |         | additional uniformly distributed transformlation, overridden by `motion.transform`
| time               |`FLOAT32_BOX1`                  |  [0, 1] | time associated with first and last key in `motion.pass:[*]` arrays
|===================================================================================================

The `motion.scale/rotation/translation` parameters takes precedent over the
generic `transform` parameter when motion blur is supported. Renderers that
don't support motion blur may fall back to using the generic `transform`
parameter.

